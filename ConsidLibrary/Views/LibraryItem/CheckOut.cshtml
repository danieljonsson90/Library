@model ConsidLibrary.Models.LibraryItem

@{
    ViewBag.Title = "Check ";
}

<h2>Check Out</h2>


<div class="form-horizontal">
    <h4>LibraryItem</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
            @Html.ValidationMessageFor(model => model.CategoryId, "", Model.CategoryId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Type)

        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Author)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Author)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Pages)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Pages)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RunTimeMinutes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RunTimeMinutes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsBorrowable)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsBorrowable)
        </dd>
    </dl>
</div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Borrower, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Borrower, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Borrower, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BorrowDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BorrowDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BorrowDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
